/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Link } from './Link';
import {
    LinkFromJSON,
    LinkFromJSONTyped,
    LinkToJSON,
} from './Link';

/**
 * 
 * @export
 * @interface EntityModelExampleModel
 */
export interface EntityModelExampleModel {
    /**
     * 
     * @type {string}
     * @memberof EntityModelExampleModel
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof EntityModelExampleModel
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof EntityModelExampleModel
     */
    phone?: string;
    /**
     * 
     * @type {{ [key: string]: Link; }}
     * @memberof EntityModelExampleModel
     */
    links?: { [key: string]: Link; };
}

/**
 * Check if a given object implements the EntityModelExampleModel interface.
 */
export function instanceOfEntityModelExampleModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function EntityModelExampleModelFromJSON(json: any): EntityModelExampleModel {
    return EntityModelExampleModelFromJSONTyped(json, false);
}

export function EntityModelExampleModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntityModelExampleModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'phone': !exists(json, 'phone') ? undefined : json['phone'],
        'links': !exists(json, '_links') ? undefined : (mapValues(json['_links'], LinkFromJSON)),
    };
}

export function EntityModelExampleModelToJSON(value?: EntityModelExampleModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'email': value.email,
        'phone': value.phone,
        '_links': value.links === undefined ? undefined : (mapValues(value.links, LinkToJSON)),
    };
}

