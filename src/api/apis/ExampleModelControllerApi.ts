/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ExampleModel,
} from '../models';
import {
    ExampleModelFromJSON,
    ExampleModelToJSON,
} from '../models';

export interface CreateRequest {
    exampleModel: ExampleModel;
}

export interface FindByIdRequest {
    id: string;
}

/**
 * 
 */
export class ExampleModelControllerApi extends runtime.BaseAPI {

    /**
     */
    async createRaw(requestParameters: CreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ExampleModel>> {
        if (requestParameters.exampleModel === null || requestParameters.exampleModel === undefined) {
            throw new runtime.RequiredError('exampleModel','Required parameter requestParameters.exampleModel was null or undefined when calling create.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/example/create`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ExampleModelToJSON(requestParameters.exampleModel),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ExampleModelFromJSON(jsonValue));
    }

    /**
     */
    async create(requestParameters: CreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ExampleModel> {
        const response = await this.createRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async findAllRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ExampleModel>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/example`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ExampleModelFromJSON));
    }

    /**
     */
    async findAll(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ExampleModel>> {
        const response = await this.findAllRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async findByIdRaw(requestParameters: FindByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ExampleModel>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling findById.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/example/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ExampleModelFromJSON(jsonValue));
    }

    /**
     */
    async findById(requestParameters: FindByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ExampleModel> {
        const response = await this.findByIdRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
